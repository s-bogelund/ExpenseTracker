{"ast":null,"code":"import _slicedToArray from\"D:/Programming/ExpenseTracker/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from\"react\";import\"./ExpenseForm.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ExpenseForm=function ExpenseForm(props){var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),enteredTitle=_useState2[0],setEnteredTitle=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),enteredAmount=_useState4[0],setEnteredAmount=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),enteredDate=_useState6[0],setEnteredDate=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),addExpenseOption=_useState8[0],setAddExpenseOption=_useState8[1];var resetInput=function resetInput(){setEnteredTitle(\"\");setEnteredAmount(\"\");setEnteredDate(\"\");};var titleChangeHandler=function titleChangeHandler(event){setEnteredTitle(event.target.value);};var amountChangeHandler=function amountChangeHandler(event){setEnteredAmount(event.target.value);};var dateChangeHandler=function dateChangeHandler(event){setEnteredDate(event.target.value);};var submitHandler=function submitHandler(event){event.preventDefault();var expenseData={title:enteredTitle,amount:+enteredAmount,date:new Date(enteredDate)};resetInput();props.onSaveExpenseData(expenseData);};var addExpense=function addExpense(){return/*#__PURE__*/_jsxs(\"form\",{onSubmit:submitHandler,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"new-expense__controls\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"new-expense__control\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Titel\"}),/*#__PURE__*/_jsx(\"input\",{placeholder:\"Navn p\\xE5 udgift\",required:true,type:\"text\",value:enteredTitle,onChange:titleChangeHandler})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"new-expense__control\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Bel\\xF8b\"}),/*#__PURE__*/_jsx(\"input\",{placeholder:\"DKK\",required:true,type:\"number\",min:\"0.01\",step:\"0.01\",value:enteredAmount,onChange:amountChangeHandler})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"new-expense__control\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Dato\"}),/*#__PURE__*/_jsx(\"input\",{required:true,type:\"date\",min:\"2019-01-01\",max:\"2023-12-31\",value:enteredDate,onChange:dateChangeHandler})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"new-expense__actions\",children:[/*#__PURE__*/_jsx(\"button\",{onMouseDown:addExpenseToggleHandler,children:\"Fortryd\"}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Tilf\\xF8j Udgift\"})]})]});};var defaultView=function defaultView(){return/*#__PURE__*/_jsx(\"button\",{className:\"default-button\",type:\"submit\",onClick:addExpenseToggleHandler,children:\"Tilf\\xF8j ny Udgift\"});};var addExpenseToggleHandler=function addExpenseToggleHandler(){resetInput();addExpenseOption===false?setAddExpenseOption(true):setAddExpenseOption(false);};return addExpenseOption===false?defaultView():addExpense();};export default ExpenseForm;","map":{"version":3,"sources":["D:/Programming/ExpenseTracker/src/components/NewExpense/ExpenseForm.js"],"names":["React","useState","ExpenseForm","props","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","addExpenseOption","setAddExpenseOption","resetInput","titleChangeHandler","event","target","value","amountChangeHandler","dateChangeHandler","submitHandler","preventDefault","expenseData","title","amount","date","Date","onSaveExpenseData","addExpense","addExpenseToggleHandler","defaultView"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n\nimport \"./ExpenseForm.css\";\n\nconst ExpenseForm = (props) => {\n    const [enteredTitle, setEnteredTitle] = useState(\"\");\n    const [enteredAmount, setEnteredAmount] = useState(\"\");\n    const [enteredDate, setEnteredDate] = useState(\"\");\n    const [addExpenseOption, setAddExpenseOption] = useState(false);\n\n    const resetInput = () => {\n        setEnteredTitle(\"\");\n        setEnteredAmount(\"\");\n        setEnteredDate(\"\");\n    };\n\n    const titleChangeHandler = (event) => {\n        setEnteredTitle(event.target.value);\n    };\n\n    const amountChangeHandler = (event) => {\n        setEnteredAmount(event.target.value);\n    };\n\n    const dateChangeHandler = (event) => {\n        setEnteredDate(event.target.value);\n    };\n\n    const submitHandler = (event) => {\n        event.preventDefault();\n\n        const expenseData = {\n            title: enteredTitle,\n            amount: +enteredAmount,\n            date: new Date(enteredDate),\n        };\n        resetInput();\n        props.onSaveExpenseData(expenseData);\n    };\n\n    const addExpense = () => {\n        return (\n            <form onSubmit={submitHandler}>\n                <div className=\"new-expense__controls\">\n                    <div className=\"new-expense__control\">\n                        <label>Titel</label>\n                        <input\n                            placeholder=\"Navn på udgift\"\n                            required\n                            type=\"text\"\n                            value={enteredTitle}\n                            onChange={titleChangeHandler}\n                        />\n                    </div>\n                    <div className=\"new-expense__control\">\n                        <label>Beløb</label>\n                        <input\n                            placeholder=\"DKK\"\n                            required\n                            type=\"number\"\n                            min=\"0.01\"\n                            step=\"0.01\"\n                            value={enteredAmount}\n                            onChange={amountChangeHandler}\n                        />\n                    </div>\n                    <div className=\"new-expense__control\">\n                        <label>Dato</label>\n                        <input\n                            required\n                            type=\"date\"\n                            min=\"2019-01-01\"\n                            max=\"2023-12-31\"\n                            value={enteredDate}\n                            onChange={dateChangeHandler}\n                        />\n                    </div>\n                </div>\n                <div className=\"new-expense__actions\">\n                    <button onMouseDown={addExpenseToggleHandler}>\n                        Fortryd\n                    </button>\n                    <button type=\"submit\">Tilføj Udgift</button>\n                </div>\n            </form>\n        );\n    };\n\n    const defaultView = () => {\n        return (\n            <button\n                className=\"default-button\"\n                type=\"submit\"\n                onClick={addExpenseToggleHandler}\n            >\n                Tilføj ny Udgift\n            </button>\n        );\n    };\n\n    const addExpenseToggleHandler = () => {\n        resetInput();\n\n        addExpenseOption === false\n            ? setAddExpenseOption(true)\n            : setAddExpenseOption(false);\n    };\n\n    return addExpenseOption === false ? defaultView() : addExpense();\n};\n\nexport default ExpenseForm;\n"]},"metadata":{},"sourceType":"module"}